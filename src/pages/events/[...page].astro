---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'
import type { responseData, Artist } from '../api/concerts.json'

export async function getStaticPaths({ paginate }) {
  const response = await fetch('http://127.0.0.1:3000/api/concerts.json')
  const data = await response.json()

  return paginate(data, { pageSize: 6 })
}

const { page } = Astro.props
---

<DefaultLayout
  title="Events"
  description="An example of a events with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Events</h1>
      <p class="text-2xl">
       Join us at one of our upcoming events!
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3">
        {
          page.data.map((concert) => (
            <li>
              <Card
                url={'/events/' + concert.title.replaceAll(' ', '-').toLowerCase()}
                img={concert.img.url}
                title={''} // dont need these props, yet when deleted, give default values. Can't change default values for some reason.
                footer={''} //
                class="object-cover"
              >
              <h2 class="text-center pb-5">{concert.title}</h2>
                <div class="relative">
                  <div>
                    {concert.artists.map((artist: Artist) => (
                      <h6>{artist.name}<i class="pl-2">{artist.instrument}</i></h6>
                    ))}
                  </div>
                  <div class="border border-black flex flex-col justify-end items-center font-bold w-[57px] absolute bottom-0 right-0">
                    <p>June</p>
                    <p class="text-4xl font-semibold">19</p>
                  </div>
                </div>
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/events' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/events/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
